---
import SunIcon from "../icons/sun.astro"
import MoonIcon from "../icons/moon.astro"
---

<button
  id="themeToggle"
  class="inline-flex text-primary transition hover:scale-105 hover:opacity-70"
  onclick="handleToggleClick()"
>
  <SunIcon
    class="opacity-100 transition-transform dark:-rotate-90 dark:opacity-0"
  />
  <MoonIcon
    class="absolute rotate-90 opacity-0 transition-transform dark:rotate-0 dark:opacity-100"
  />
  <span class="sr-only"></span>
</button>

<script is:inline>
  function updateThemeMessage(theme) {
		const translation = theme ? "oscuro" : "claro"
		const actualThemeMsg = `Alternar tema, el tema actual es ${translation}`
		const span = document.querySelector("span.sr-only")
		span.innerHTML = actualThemeMsg

	}

  function handleToggleClick() {
		const element = document.documentElement
		element.classList.toggle('dark')

		const isDark = element.classList.contains('dark')
		localStorage.setItem("theme", isDark ? 'dark' : 'light')

		updateThemeMessage(isDark)
	}

  function handleThemePreferenceChange(e) {
		const isDark = document.documentElement.classList.contains("dark")
		const toggle = (e.matches && !isDark) || (!e.matches && isDark)
		if (toggle) handleToggleClick()
	}
  document.addEventListener('astro:page-load', () => {
    let darkModePreference = window.matchMedia("(prefers-color-scheme: dark)")
    darkModePreference.addEventListener("change", handleThemePreferenceChange)
    darkModePreference.addListener(handleThemePreferenceChange) // backward compatibility

    updateThemeMessage(getThemePreference())
  })
</script>